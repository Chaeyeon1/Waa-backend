generator client {
  provider = "prisma-client-js"
}


// 데이터베이스 연동
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 만들려는 모델
model Todo {
  id Int @default(autoincrement()) @id
  title String
  content String?
  is_done Boolean? @default(false)
}

model User {
  id Int @default(autoincrement()) @id
  username String?
  email String?
  score Int?
  age Int?
  userId String @unique
  password String?
  accessToken String?
  refreshToken String?
  counselings Counseling[]
  twentyQuestions TwentyQuestion[]  
  wordChains  WordChain[]  
  keywordCounts KeywordCount[] 
  quiz Quiz[]
  MemoryGames  MemoryGame[]
  drawingGames DrawingGame[]
}


model Counseling {
  id       Int     @id @default(autoincrement())
  time     DateTime @default(now())
  sender   String
  content     String
  user_id  Int?
  user     User?   @relation(fields: [user_id], references: [id])
}

model TwentyQuestion {
  id       Int     @id @default(autoincrement())
  time     DateTime @default(now())
  sender   String
  content  String
  user_id  Int?
  user     User?   @relation(fields: [user_id], references: [id])
}

model WordChain {
  id       Int     @id @default(autoincrement())
  sender   String
  time     DateTime @default(now())
  content  String
  user_id  Int?
  user     User?   @relation(fields: [user_id], references: [id])
}

model KeywordCount {
  id Int @default(autoincrement()) @id
  keyword String  
  content String?
  count Int       
  user User @relation(fields: [userId], references: [id]) 
  userId Int
}

model Quiz {
  id Int @id @default(autoincrement()) 
  age Int
  question String
  answer String
  user_id  Int?
  user     User?   @relation(fields: [user_id], references: [id])
}


model MemoryGame {
  id         Int     @default(autoincrement()) @id
  userId     Int
  userName    String
  score      Int
  createdAt  DateTime @default(now())
  user       User    @relation(fields: [userId], references: [id])
}

model DrawingGame {
  id         Int     @default(autoincrement()) @id
  userId     Int
  userName   String
  score      Int
  createdAt  DateTime @default(now())
  user       User    @relation(fields: [userId], references: [id])
}

model Stock {
  id    Int    @id @default(autoincrement())
  date DateTime 
  money Int
}

model FrontMemo {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime 
  writer     String
  content    String
  comments   FrontMemoComment[] 
}

model FrontMemoComment {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime 
  content    String
  writer     String?
  memo       FrontMemo @relation(fields: [memoId], references: [id])
  memoId     Int
}